import React , { useLayoutEffect , useState, useEffect } from 'react'
import Head from 'next/head';
import Layout from '../../src/Layout/Layout';
import { Button } from '@mantine/core';
import MangeProducts from '../../src/components/customs/MangeProducts/MangeProducts';
import { useSelector , useDispatch } from 'react-redux';
import { getProduct } from './../../src/redux/slice/productSlice';
import { getCategory } from './../../src/redux/slice/categorySlice';
import { RootState } from '../../src/redux/store/store';
import ManageOrder from './../../src/components/customs/ManageOrder/ManageOrder';


function index() {



    const [IsProduct , setIsProduct] = useState<boolean>(true)



    // useEffect(()=>{
    //     dispatch(getProduct())
    //     dispatch(getCategory())
    // },[])



  return (
    <div dir='rtl' className='relarive font-IR'>
    <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    {/* <div className={`${(visible) ? "" : "hidden"}`}>
      <LoadingOverlay visible={visible} overlayBlur={8} 
    loaderProps={{ size: 'xl', color: '#5500FF', variant: 'oval' }}
    overlayOpacity={0.3}
    overlayColor="#b5b5b5" />
    </div> */}
    <Layout>
        <div className="my-12 font-IR">
            <div className="flex justify-around p-2">
                <h1 className="text-3xl font-bold">
                    پنل  مدیریت فروشگاه
                </h1>
                <div className='border rounded-lg border-[#5500FF]'>
                    <Button onClick={()=>{setIsProduct(true)}} className={`font-IR ${(IsProduct) ? "bg-blue-100" : ""}`} variant="subtle" size='md' radius="md">کالاها</Button>
                    <Button onClick={()=>{setIsProduct(false)}} className={`font-IR ${(IsProduct) ? "" : "bg-blue-100"}`} variant="subtle" size='md' radius="md">سفارش ها</Button>
                </div>
            </div>
            {(IsProduct) ? <MangeProducts  /> : <ManageOrder/>}
            
        </div>
        
    </Layout>
</div>
  )
}

export default index


// export async function getServerSideProps() {
//   const cookie = "Token"+ " " + Cookies.get('token')
//   const res = await fetch('http://localhost:8000/store/order' , {
//     method: 'GET',
//     headers: {
//       'Authorization':cookie
//      },
//   })
//   const orderList = await res.json()

//   return {
//     props: {
//       orderList
//     }, // will be passed to the page component as props
//   }
// }